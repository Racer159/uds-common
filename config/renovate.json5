{
    "enabled": true,
    "forkProcessing": "enabled",
    "$schema": "https://docs.renovatebot.com/renovate-schema.json",
    "extends": [
        ":dependencyDashboard",
        ":semanticPrefixFixDepsChoreOthers",
        "config:base",
        "group:all",
        "replacements:all",
        "workarounds:all"
    ],
    "timezone": "America/New_York",
    "rebaseStalePrs": true,
    "schedule": ["after 7am and before 9am every weekday"],
    "dependencyDashboard": true,
    "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
    "rebaseWhen": "conflicted",
    "commitBodyTable": true,
    "suppressNotifications": ["prIgnoreNotification"],
    "pre-commit": {
        "enabled": true
    },
    "helm-values": {
        "fileMatch": ["./.+\\.yaml$"]
    },
    "kubernetes": {
        "fileMatch": ["\\.yaml$"],
        "ignorePaths": [
            ".github"
        ]
    },
    "regexManagers": [
        // Matches specified datasources where a colon separates the version on the following line (i.e. https://github.com/defenseunicorns/zarf/blob/7e91d3b9823b52fe6d0f563d692c8af57faa6005/examples/big-bang/zarf.yaml#L5)
        {
            "fileMatch": [".*\\.ya?ml$"],
            "matchStrings": [
                // Test: https://regex101.com/r/d9t0lt/1
                "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?( extractVersion=(?<extractVersion>.*?))?( registryUrl=(?<registryUrl>.*?))?\\s.*:\\s*['\"]?(?<currentValue>[v0-9].*?)['\"]?(\\s|$)"
            ],
            "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver-coerced{{/if}}",
            "extractVersionTemplate": "{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}"
        },
        // Matches specified datasources where an @ separates the version on the following line (i.e. https://github.com/defenseunicorns/uds-core/blob/5a2666f6a5ba89686c6dc1fecb0db98512b1b9f8/.github/actions/setup/action.yaml#L32)
        {
            "fileMatch": [".*\\.ya?ml$"],
            "matchStrings": [
                // Test: https://regex101.com/r/vZkEYD/1
                "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?( extractVersion=(?<extractVersion>.*?))?( registryUrl=(?<registryUrl>.*?))?\\s.*@\\s*['\"]?(?<currentValue>[v0-9].*?)['\"]?(\\s|$)"
            ],
            "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver-coerced{{/if}}",
            "extractVersionTemplate": "{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}"
        },
        // Matches individual images in a `zarf.yaml`'s `images:` section that are tagged with a version (allowing for # renovate overrides)
        {
            "fileMatch": [ "(^|/)zarf\\.ya?ml$" ],
            "matchStrings": [
                // Test: https://regex101.com/r/Bd8IBp/1
                "- ['\"]?(?<depName>[^\"'\\s]+):(?<currentValue>[^\"'\\s]+)['\"]?( # renovate:( versioning=(?<versioning>.*?))?( extractVersion=(?<extractVersion>.*?))?)?(\\s|$)"
            ],
            "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver-coerced{{/if}}",
            "extractVersionTemplate": "{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}",
            "datasourceTemplate": "docker"
        },
        // Matches individual helm repo charts in a `zarf.yaml`'s `charts:` section that specify `version` then `url` 
        {
            "fileMatch": [ "(^|/)zarf\\.ya?ml$" ],
            "matchStringsStrategy": "recursive",
            "matchStrings": [
                // Match the chart section. Test: https://regex101.com/r/1DL0tI/3
                "(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)",
                // Match a chart entry. Test: https://regex101.com/r/ibpxYd/1
                "(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)",
                // Match the parts of a chart entry. Test: https://regex101.com/r/nruXFi/1
                "(?m)name: [\"']?(?<depName>.+?)[\"']?$(.|\\n)*?version: [\"']?(?<currentValue>.+?)[\"']?$(.|\\n)*?url: [\"']?(?<registryUrl>.+?)[\"']?$"
            ],
            "datasourceTemplate": "helm"
        },
        // Matches individual helm repo charts in a `zarf.yaml`'s `charts:` section that specify `url` then `version` 
        {
            "fileMatch": [ "(^|/)zarf.yaml$" ],
            "matchStringsStrategy": "recursive",
            "matchStrings": [
                // Match the chart section. Test: https://regex101.com/r/1DL0tI/3
                "(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)",
                // Match a chart entry. Test: https://regex101.com/r/ibpxYd/1
                "(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)",
                // Match the parts of a chart entry. Test: https://regex101.com/r/iqP5RJ/1
                "(?m)name: [\"']?(?<depName>.+?)[\"']?$(.|\\n)*?url: [\"']?(?<registryUrl>.+?)[\"']?$(.|\\n)*?version: [\"']?(?<currentValue>.+?)[\"']?$"
            ],
            "datasourceTemplate": "helm"
        },
        // Matches individual helm git charts in a `zarf.yaml`'s `charts:` section that specify `version` then `url` 
        {
            "fileMatch": [ "(^|/)zarf\\.ya?ml$" ],
            "matchStringsStrategy": "recursive",
            "matchStrings": [
                // Match the chart section. Test: https://regex101.com/r/1DL0tI/3
                "(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)",
                // Match a chart entry. Test: https://regex101.com/r/ibpxYd/1
                "(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)",
                // Match the parts of a chart entry. Test: https://regex101.com/r/PIIH1p/1
                "(?m)name:(.|\\n)*?version: [\"']?(?<currentValue>.+?)[\"']?$(.|\\n)*?url: [\"']?(?<depName>.+?\\.git)[\"']?$"
            ],
            "datasourceTemplate": "git-tags"
        },
        // Matches individual helm git charts in a `zarf.yaml`'s `charts:` section that specify `url` then `version` 
        {
            "fileMatch": [ "(^|/)zarf.yaml$" ],
            "matchStringsStrategy": "recursive",
            "matchStrings": [
                // Match the chart section. Test: https://regex101.com/r/1DL0tI/3
                "(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)",
                // Match a chart entry. Test: https://regex101.com/r/ibpxYd/1
                "(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)",
                // Match the parts of a chart entry. Test: https://regex101.com/r/m71Sn5/1
                "(?m)name:(.|\\n)*?url: [\"']?(?<depName>.+?\\.git)[\"']?$(.|\\n)*?version: [\"']?(?<currentValue>.+?)[\"']?$"
            ],
            "datasourceTemplate": "git-tags"
        },
        // Matches individual helm oci charts in a `zarf.yaml`'s `charts:` section that specify `version` then `url` 
        {
            "fileMatch": [ "(^|/)zarf\\.ya?ml$" ],
            "matchStringsStrategy": "recursive",
            "matchStrings": [
                // Match the chart section. Test: https://regex101.com/r/1DL0tI/3
                "(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)",
                // Match a chart entry. Test: https://regex101.com/r/ibpxYd/1
                "(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)",
                // Match the parts of a chart entry. Test: https://regex101.com/r/gYGkgq/1
                "(?m)name:(.|\\n)*?version: [\"']?(?<currentValue>.+?)[\"']?$(.|\\n)*?url: [\"']?oci:\\/\\/(?<depName>.+?)[\"']?$"
            ],
            "datasourceTemplate": "docker"
        },
        // Matches individual helm oci charts in a `zarf.yaml`'s `charts:` section that specify `url` then `version` 
        {
            "fileMatch": [ "(^|/)zarf.yaml$" ],
            "matchStringsStrategy": "recursive",
            "matchStrings": [
                // Match the chart section. Test: https://regex101.com/r/1DL0tI/3
                "(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)",
                // Match a chart entry. Test: https://regex101.com/r/ibpxYd/1
                "(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)",
                // Match the parts of a chart entry. Test: https://regex101.com/r/VDMzhy/1
                "(?m)name:(.|\\n)*?url: [\"']?oci:\\/\\/(?<depName>.+?)[\"']?$(.|\\n)*?version: [\"']?(?<currentValue>.+?)[\"']?$"
            ],
            "datasourceTemplate": "docker"
        }
    ],
    "packageRules": [
        // Excludes a bad tag in registry1 from when this image was based on UBI
        {
            "matchPackageNames": ["registry1.dso.mil/ironbank/big-bang/base"],
            "allowedVersions": "!/8.4/"
        }
    ]
}
